version: "3.9"

services:
  blog-frontend:
    build:
      context: ./services/blog-frontend
      dockerfile: Dockerfile
    image: blog-frontend:latest
    container_name: blog-frontend # it must be the same as service name -> able to call queries/mutations inside next-auth provider
    volumes:
      - ./services/blog-frontend/:/usr/src/app/
    ports:
      - 3000:3000
  blog-api:
    build:
      context: ./services/blog-api
      dockerfile: Dockerfile
    image: blog-api:latest
    container_name: blog-api # it must be the same as service name -> able to call queries/mutations inside next-auth provider
    volumes:
      - ./services/blog-api/src:/usr/src/app/src
      - ./services/blog-api/.env:/usr/src/app/.env
      - ./services/blog-api/package.json:/usr/src/app/package.json
    ports:
      - 4000:4000
    env_file:
      - ./services/blog-api/.env
    environment:
      - DEV_DB_HOST=db
  db:
    image: mysql
    container_name: db
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: blog
    volumes:
      - blog-mysql-data:/var/lib/mysql

  adminer:
    image: adminer
    container_name: db_manager
    restart: always
    ports:
      - 3310:8080

  elasticsearch:
    image: elasticsearch:8.6.0
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200
    volumes:
      - blog-elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: kibana:8.6.0
    container_name: kibana
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

volumes:
  blog-mysql-data:
    driver: local
  blog-elasticsearch-data:
    driver: local
